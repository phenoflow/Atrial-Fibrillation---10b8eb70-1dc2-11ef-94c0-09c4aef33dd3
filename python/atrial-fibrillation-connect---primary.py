# Katherine I. Morley, Joshua Wallace , Spiros C. Denaxas, Ross J. Hunter, Riyaz S. Patel, Pablo Perel, Anoop D. Shah, Adam D. Timmis, Richard J. Schilling, Harry Hemingway, 2024.

import sys, csv, re

codes = [{"code":"793M300","system":"readv2"},{"code":"7914000","system":"readv2"},{"code":"7914300","system":"readv2"},{"code":"7914100","system":"readv2"},{"code":"7914200","system":"readv2"},{"code":"7934200","system":"readv2"},{"code":"7L1H100","system":"readv2"},{"code":"793M300","system":"readv2"},{"code":"793M200","system":"readv2"},{"code":"7934800","system":"readv2"},{"code":"7925z00","system":"readv2"},{"code":"7934800","system":"readv2"},{"code":"7931100","system":"readv2"},{"code":"791A100","system":"readv2"},{"code":"790M100","system":"readv2"},{"code":"7914200","system":"readv2"},{"code":"790E500","system":"readv2"},{"code":"7914100","system":"readv2"},{"code":"7926200","system":"readv2"},{"code":"7914000","system":"readv2"},{"code":"7910411","system":"readv2"},{"code":"792B.00","system":"readv2"},{"code":"7912511","system":"readv2"},{"code":"7913411","system":"readv2"},{"code":"7913300","system":"readv2"},{"code":"7910400","system":"readv2"},{"code":"7905z00","system":"readv2"},{"code":"7926000","system":"readv2"},{"code":"7926z00","system":"readv2"},{"code":"7934100","system":"readv2"},{"code":"7921100","system":"readv2"},{"code":"790H000","system":"readv2"},{"code":"7901000","system":"readv2"},{"code":"7914300","system":"readv2"},{"code":"7913400","system":"readv2"},{"code":"7.90E+102","system":"readv2"},{"code":"7.90E+02","system":"readv2"},{"code":"8735","system":"readv2"},{"code":"7921200","system":"readv2"},{"code":"7905000","system":"readv2"},{"code":"7910300","system":"readv2"},{"code":"7.90E+202","system":"readv2"},{"code":"790G100","system":"readv2"},{"code":"7916z11","system":"readv2"},{"code":"7918200","system":"readv2"},{"code":"7927300","system":"readv2"},{"code":"7912300","system":"readv2"},{"code":"7905","system":"readv2"},{"code":"7925","system":"readv2"},{"code":"7926300","system":"readv2"},{"code":"7930400","system":"readv2"},{"code":"7931200","system":"readv2"},{"code":"7921300","system":"readv2"},{"code":"7905100","system":"readv2"},{"code":"790H200","system":"readv2"},{"code":"7926","system":"readv2"},{"code":"7925y00","system":"readv2"},{"code":"7901500","system":"readv2"},{"code":"790A111","system":"readv2"},{"code":"7914400","system":"readv2"},{"code":"7921000","system":"readv2"},{"code":"7914200","system":"readv2"},{"code":"7914100","system":"readv2"},{"code":"7914300","system":"readv2"},{"code":"7914000","system":"readv2"},{"code":"K623","system":"readv2"},{"code":"K624","system":"readv2"},{"code":"X502","system":"readv2"},{"code":"K575","system":"readv2"},{"code":"K463","system":"readv2"},{"code":"K45","system":"readv2"},{"code":"K285","system":"readv2"},{"code":"K171","system":"readv2"},{"code":"K292","system":"readv2"},{"code":"K07","system":"readv2"},{"code":"K195","system":"readv2"},{"code":"K125","system":"readv2"},{"code":"K193","system":"readv2"},{"code":"K414","system":"readv2"},{"code":"K255","system":"readv2"},{"code":"K343","system":"readv2"},{"code":"K072","system":"readv2"},{"code":"K455","system":"readv2"},{"code":"K191","system":"readv2"},{"code":"K073","system":"readv2"},{"code":"K196","system":"readv2"},{"code":"K233","system":"readv2"},{"code":"K231","system":"readv2"},{"code":"K284","system":"readv2"},{"code":"K294","system":"readv2"},{"code":"K452","system":"readv2"},{"code":"K575","system":"readv2"},{"code":"K071","system":"readv2"},{"code":"K026","system":"readv2"},{"code":"K562","system":"readv2"},{"code":"K078","system":"readv2"},{"code":"K454","system":"readv2"},{"code":"K372","system":"readv2"},{"code":"K458","system":"readv2"},{"code":"K464","system":"readv2"},{"code":"K079","system":"readv2"},{"code":"K293","system":"readv2"},{"code":"K482","system":"readv2"},{"code":"K295","system":"readv2"},{"code":"K412","system":"readv2"},{"code":"K177","system":"readv2"},{"code":"K021","system":"readv2"},{"code":"K554","system":"readv2"},{"code":"K274","system":"readv2"},{"code":"K192","system":"readv2"},{"code":"K459","system":"readv2"},{"code":"K276","system":"readv2"},{"code":"K456","system":"readv2"},{"code":"K172","system":"readv2"},{"code":"K525","system":"readv2"},{"code":"K254","system":"readv2"},{"code":"K291","system":"readv2"},{"code":"K222","system":"readv2"},{"code":"K532","system":"readv2"},{"code":"K411","system":"readv2"},{"code":"K572","system":"readv2"},{"code":"K462","system":"readv2"},{"code":"K413","system":"readv2"}];
REQUIRED_CODES = 1;
with open(sys.argv[1], 'r') as file_in, open('atrial-fibrillation-potential-cases.csv', 'w', newline='') as file_out:
    csv_reader = csv.DictReader(file_in)
    csv_writer = csv.DictWriter(file_out, csv_reader.fieldnames + ["atrial-fibrillation-connect---primary-identified"])
    csv_writer.writeheader();
    codes_identified = 0;
    for row in csv_reader:
        newRow = row.copy();
        for cell in row:
            # Iterate cell lists (e.g. codes)
            for item in re.findall(r'\(([^,]*)\,', row[cell]):
                if(item in list(map(lambda code: code['code'], codes))): codes_identified+=1;
                if(codes_identified>=REQUIRED_CODES):
                    newRow["atrial-fibrillation-connect---primary-identified"] = "CASE";
                    break;
            if(codes_identified>=REQUIRED_CODES): break;
        if(codes_identified<REQUIRED_CODES):
            newRow["atrial-fibrillation-connect---primary-identified"] = "UNK";
        codes_identified=0;
        csv_writer.writerow(newRow)
